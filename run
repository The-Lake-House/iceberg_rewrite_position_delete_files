#!/usr/bin/env bash
#
# Measure the impact of snapshot expiration on S3 requests for deletions.
#
# Control: Disable snapshot expiration.
# Experiment: Enable snapshot expiration after every write, after every 10
# writes, after every 25 writes, after every 50 writes.

set -eu

NUM_REPS=125

SCHEMA_NAME=iceberg_rewrite_position_delete_files
BUCKET_NAME=iceberg-rewrite-position-delete-files

SPARK_EXTRA_CONF="--conf spark.sql.catalog.spark_catalog.cache-enabled=false"

mcli mb -p "minio/$BUCKET_NAME"
spark-sql-hms-iceberg $SPARK_EXTRA_CONF -e "CREATE SCHEMA IF NOT EXISTS $SCHEMA_NAME LOCATION 's3a://$BUCKET_NAME/';" &> /dev/null
spark-sql-hms-iceberg --database "$SCHEMA_NAME" -e "DROP TABLE IF EXISTS store;" &> /dev/null

for INTERVAL in off manifest_merge 1 10 25 50; do
    echo "$INTERVAL"
    mkdir -p "runtime_{update,scan}/$INTERVAL"
    if [[ "$INTERVAL" == 'manifest_merge' ]]; then
        TBLPROPERTIES="TBLPROPERTIES (write.delete.mode = 'merge-on-read', write.update.mode = 'merge-on-read', write.merge.mode = 'merge-on-read')"
    else
        TBLPROPERTIES="TBLPROPERTIES (write.delete.mode = 'merge-on-read', write.update.mode = 'merge-on-read', write.merge.mode = 'merge-on-read', 'commit.manifest-merge.enabled' = false)"
    fi
    spark-sql-hms-iceberg $SPARK_EXTRA_CONF --database "$SCHEMA_NAME" -e "CREATE TABLE store (key INT, value INT) USING iceberg $TBLPROPERTIES;" &> /dev/null
    spark-sql-hms-iceberg $SPARK_EXTRA_CONF --database "$SCHEMA_NAME" -f <(./datagen store $(($NUM_REPS + 1))) &> /dev/null
    for REP in $(seq -w 1 "$NUM_REPS"); do
        # UPDATE OPERATION
        mcli admin trace minio > "trace_update_${INTERVAL}_${REP}" &
        PID=$!
        spark-sql-hms-iceberg --conf spark.eventLog.enabled=true --conf spark.eventLog.dir="$PWD/runtime_update/$INTERVAL" --database "$SCHEMA_NAME" -e "DELETE FROM store WHERE key = $((10#$REP));" &> /dev/null
        kill -SIGINT $PID
        # TABLE SCAN
        mcli admin trace minio > "trace_scan_${INTERVAL}_${REP}" &
        PID=$!
        spark-sql-hms-iceberg --conf spark.eventLog.enabled=true --conf spark.eventLog.dir="$PWD/runtime_scan/$INTERVAL" --database "$SCHEMA_NAME" -e "SELECT * FROM store;" &> /dev/null
        kill -SIGINT $PID
        # PROCEDURE CALL
        if [[ "$INTERVAL" != 'off' ]] && [[ "$INTERVAL" != 'manifest_merge' ]]; then
            if [[ "$((10#$REP % $INTERVAL))" -eq 0 ]]; then
                spark-sql-hms-iceberg -e "CALL system.rewrite_position_delete_files('$SCHEMA_NAME.store');" &> /dev/null
            fi
        fi
        echo "> $REP"
    done
    spark-sql-hms-iceberg --database "$SCHEMA_NAME" -e "DROP TABLE store;" &> /dev/null
    mcli rm -r --force "minio/$BUCKET_NAME/store"
done

spark-sql-hms-iceberg $SPARK_EXTRA_CONF -e "DROP SCHEMA $SCHEMA_NAME CASCADE;"
mcli rb --force "minio/$BUCKET_NAME"
